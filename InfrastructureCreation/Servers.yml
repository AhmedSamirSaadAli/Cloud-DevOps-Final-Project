Description: >
    Ahmed Samir / FinalProject  
    Servers 

Parameters:

    EnvironmentName:
        Description: An environment name that will be prefixed to resource names
        Type: String
        
    AMItoUse:
        Description: AMI to use for our base image
        Type: String
        
    ENVIRONMENTNAME:
        Description: An environment name that will be prefixed to resource names.
        Type: String    

Resources:

    BastionLaunchConfig:
        Type: AWS::AutoScaling::LaunchConfiguration
        Properties:
            UserData:
                Fn::Base64: !Sub |
                    #!/bin/bash
                    sudo su
                    apt-get update -y 
            ImageId: !Ref AMItoUse
            SecurityGroups:
            - Ref: SecurityGroup
            InstanceType: t2.medium
            BlockDeviceMappings:
            - DeviceName: "/dev/sdk"
              Ebs:
               VolumeSize: '10'

    SecurityGroup:
        Type: AWS::EC2::SecurityGroup
        Properties:
            GroupDescription: Bastion Host Security Group
            VpcId:
                Fn::ImportValue:
                    !Sub "${EnvironmentName}-VPCID"
            SecurityGroupIngress:
            - IpProtocol: tcp
              FromPort: 22
              ToPort: 22
              CidrIp: 0.0.0.0/0

    WebAppGroup:
        Type: AWS::AutoScaling::AutoScalingGroup
        Properties:
            VPCZoneIdentifier:
            - Fn::ImportValue: !Sub "${EnvironmentName}-PUB-SN"
            LaunchConfigurationName:
             Ref: BastionLaunchConfig
            MinSize: '1'
            MaxSize: '1'
            TargetGroupARNs:
            - Ref: WebAppTargetGroup

    WebAppTargetGroup:
        Type: AWS::ElasticLoadBalancingV2::TargetGroup
        Properties:
          HealthCheckIntervalSeconds: 10
          HealthCheckPath: /
          HealthCheckProtocol: HTTP
          HealthCheckTimeoutSeconds: 8
          HealthyThresholdCount: 2
          Port: 80
          Protocol: HTTP
          UnhealthyThresholdCount: 5
          VpcId: 
            Fn::ImportValue:
              Fn::Sub: "${EnvironmentName}-VPCID"
  #############################################################
  
    EKSSECURITUGROUP:
        Type: AWS::EC2::SecurityGroup
        Properties: 
          GroupDescription: EKS Cluster Security Group
          Tags: 
            - Key: Environment
              Value: !Ref EnvironmentName
          VpcId:
                Fn::ImportValue:
                    !Sub "${EnvironmentName}-VPCID"

    EKSSECURITUGROUPINGRESS:
        Type: AWS::EC2::SecurityGroupIngress
        Properties:
          GroupId: !Ref EKSSECURITUGROUP
          IpProtocol: tcp
          FromPort: 0
          ToPort: 65535
          SourceSecurityGroupId: !Ref EKSSECURITUGROUP

    EKSCLUSTER:
        Type: 'AWS::EKS::Cluster'
        Properties:
          Name: PROD
          Version: 1.21
          RoleArn: !GetAtt eksClusterRole.Arn ##################################################
          ResourcesVpcConfig:
            SecurityGroupIds:
              - !Ref EKSSECURITUGROUP
            SubnetIds:
              - Fn::ImportValue: !Sub ${EnvironmentName}-PRI1-SN
              - Fn::ImportValue: !Sub ${EnvironmentName}-PRI2-SN



    EKSNODEGROUP:
        Type: 'AWS::EKS::Nodegroup'
        Properties:
          ClusterName: !Ref EKSCLUSTER
          NodeRole:  !GetAtt eksNodeRole.Arn  ##################################################
          ScalingConfig:
            MinSize: 1
            DesiredSize: 2
            MaxSize: 3
          Subnets:
            - Fn::ImportValue: !Sub ${EnvironmentName}-PRI1-SN
            - Fn::ImportValue: !Sub ${EnvironmentName}-PRI2-SN

    eksClusterRole:
        Type: AWS::IAM::Role
        Properties:
          AssumeRolePolicyDocument:
            Version: '2012-10-17'
            Statement:
            - Effect: Allow
              Principal:
                Service:
                - eks.amazonaws.com
              Action:
              - sts:AssumeRole
          ManagedPolicyArns:
            - arn:aws:iam::aws:policy/AmazonEKSClusterPolicy
            - arn:aws:iam::aws:policy/AmazonEKSServicePolicy

    eksNodeRole:
        Type: AWS::IAM::Role
        Properties:
          AssumeRolePolicyDocument:
            Version: '2012-10-17'
            Statement:
            - Effect: Allow
              Principal:
                Service:
                - ec2.amazonaws.com
              Action:
              - sts:AssumeRole
          ManagedPolicyArns:
            - arn:aws:iam::aws:policy/AmazonEKSWorkerNodePolicy
            - arn:aws:iam::aws:policy/AmazonEKS_CNI_Policy
            - arn:aws:iam::aws:policy/AmazonEC2ContainerRegistryReadOnly
            
